<!doctype html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <meta name="google-site-verification" content="N_KLIKDoMh-B--60g4igKeIsKAlZpBrxyDzhJYWW54A" />
    <meta name="author" content="Christian BOUNGOU | chrisBdev">
    <title>{% block title %}Arbre de clôture v1.9{% endblock %}</title>
    <meta name="description" content="{% block description %}scc-tool.com contient l'outil dit 'Arbre de clôture' pour les services de proximités (SDP) de l'entreprise SCC présents sur les comptes client SAFRAN{% endblock %}">
    <meta name="keywords" content="{% block keyswords %}Arbre de clôture, SCC, SAFRAN, SNOW, Service Now, SDP, Support informatique, SDS, SAE, SLS, scc-tool{% endblock %}">
    <script src="https://code.jquery.com/jquery-3.0.0.js"></script>
{#    <script src="https://code.jquery.com/jquery-migrate-3.3.2.js"></script>#}
    <script src="https://twitter.github.io/typeahead.js/releases/latest/typeahead.bundle.js"></script>
    {% block stylesheets %}
        {{ encore_entry_link_tags('app') }}
    {% endblock %}
</head>
<body class="is-relative has-navbar-fixed-top-desktop">

<div class="bg-img" style="background: url({{ asset('build/images/bg_smoke.3c11092c.jpg') }})">
    <div class="bg-layer"></div>
</div>

<nav class="navbar is-fixed-top-desktop is-light has-text-black" role="navigation" aria-label="main navigation">
    <div class="navbar-brand is-justify-content-center">
        <a class="navbar-item" href="{{ path('home') }}">
            <img class="" width="100" height="100" src="{{ asset('build/images/logo_scc.8d0242ce.png') }}" alt="SCC">
        </a>
    </div>

    <p class="navbar-item is-flex is-align-items-center is-justify-content-center">
        <b>Arbre de clôture | v2</b>
    </p>

    {{ include('includes/nav/nav_breadcrumbs.html.twig') }}

    {% if app.user %}
    <div class="navbar-end has-text-centered">
        <div class="navbar-item">
            <div class="tags has-addons is-justify-content-center">
                    <span class="tag is-white is-medium ">
                        {{ app.user.username }}
                    </span>
                    <a href="{{ path('app_logout') }}" class="tag button is-danger is-medium ">
                        <span>
                            Déconnexion
                        </span>
                        <span class="icon">
                            <i class="fas fa-door-open"></i>
                        </span>
                    </a>
            </div>
        </div>
    </div>
    {% endif %}

</nav>

{{ include('includes/flash_message.html.twig') }}

<section class="is-fullheight is-flex-desktop is-justify-content-center is-align-items-center section-base-html">

    <div class="column is-flex-desktop is-align-items-center is-justify-content-center is-flex-direction-column">
        {{ include('includes/nav/canceled.html.twig') }}
        {% block body %}{% endblock %}
    </div>
</section>





    {% block javascripts %}
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <script>
            function checkRadio(radio){
                let thisRadio = radio.querySelector('.radio-select');
                thisRadio.checked = true;
            }
        </script>


        <script>
            function goBack() {
                window.history.back();
            }
        </script>


        <script>
            let requiredForAdd = document.querySelectorAll('.required-for-add');
            let typeField = document.querySelectorAll('.type-field');
        </script>


        {#        SCRIPT POUR VERIF NOMBRE DANS FORMULAIRE          #}
        <script>

            let tpxInput = document.querySelectorAll('input.tpx');
            tpxInput.forEach(function (element) {
                element.onkeyup = function () {
                    verif_nombre(element);
                    verif_nombre_max(element, 3)
                }
            });

            function verif_nombre(champ)
            {
                var chiffres = new RegExp("[0-9]");
                var verif;
                var points = 0;

                for(x = 0; x < champ.value.length; x++)
                {
                    verif = chiffres.test(champ.value.charAt(x));
                    if(champ.value.charAt(x) === "."){points++;}
                    if(points > 1){verif = false; points = 1;}
                    if(verif === false || !champ.value){champ.value = champ.value.substr(0,x) + champ.value.substr(x+1,champ.value.length-x+1); x--;}
                }
            }

            function verif_nombre_max(champ, max){

                let x = champ.value;
                let xsub = x.toString().substr(0,max);
                champ.value = xsub;

            }
        </script>
        {#        FIN DU SCRIPT         #}









        {#               SCRIPT POUR AJAX                   #}
        <script>

            let removeBtn = document.querySelectorAll('a.ajax-remove-asset').forEach(function (link){
                link.addEventListener('click' || 'touchstart', removeAsset);
            });

            function addAsset(event){

                event.preventDefault();

                const url = this.action;
                const formData = $(this).serialize();

                axios.post(url,formData).then(function (response) {
                    let datas = response.data;

                    if (datas.position <= 10){
                        let container = document.querySelector('#asset-tags-grouped');

                        container.innerHTML += "<div class=\"control\">\n" +
                            "                     <div class=\"tags has-addons\">\n" +
                            "                        </div>\n" +
                            "                    </div>";
                        let balises1 = [];
                        let balises2 = [];
                        let onlyOne = true;
                        let onlyAsset = true;
                        let ae = '';
                        let as = '';

                        if (datas.hasOwnProperty('ae')) {
                            onlyAsset = false;
                        }
                        for (const property in datas) {
                            if ( property === 'url_for_delete' || property === 'position' || datas[property] === 'XX' || datas[property] === null ) {
                            }else if (property === 'action' || property === 'type') {
                                balises1.push(datas[property]);
                            } else if (property === 'maximum'){
                            } else {
                                if (property === 'ae'){
                                    ae = datas[property];
                                } else if (property === 'as') {
                                    as = datas[property];
                                }
                                balises2.push(datas[property]);
                            }
                        }

                        balises2.forEach(function (element, key) {
                            if (balises2.length > 1){
                                if (element !== 'XX') {
                                    onlyOne = false;
                                }
                            }
                            return onlyOne;
                        });

                        let urlForDelete = datas.url_for_delete;

                        if (balises1.length === 1){
                            container.lastElementChild.firstElementChild.innerHTML += "<span class=\"tag is-dark\">"+ balises1[0] +"</span>"
                        }else if (balises1.length === 2){
                            container.lastElementChild.firstElementChild.innerHTML += "<span class=\"tag is-dark\">"+ balises1[0] +"_"+ balises1[1] +"</span>"
                        }

                        balises2.forEach(function (element, key) {
                            if (element !== 'XX'){
                                if (key === 0){
                                    if ( onlyOne && onlyAsset){
                                        container.lastElementChild.firstElementChild.innerHTML += "<span class=\"icon-text tag is-dark hostnames\">\n" +
                                            "                                                           <span>"+ element +"</span>\n" +
                                            "                                                   </span>"
                                    }else {
                                        if (element == ae){
                                            container.lastElementChild.firstElementChild.innerHTML += "<span class=\"icon-text tag is-dark hostnames\">\n" +
                                                "                                                           <span class=\"icon is-small\">\n" +
                                                "                                                               <i class=\"fas fa-plus-square\"></i>\n" +
                                                "                                                           </span>\n" +
                                                "                                                           <span>"+ element +"</span>\n" +
                                                "                                                   </span>"
                                        } else if (element == as){
                                            container.lastElementChild.firstElementChild.innerHTML += "<span class=\"icon-text tag is-dark hostnames\">\n" +
                                                "                                                           <span class=\"icon is-small\">\n" +
                                                "                                                               <i class=\"fas fa-minus-square\"></i>\n" +
                                                "                                                           </span>\n" +
                                                "                                                           <span>"+ element +"</span>\n" +
                                                "                                                   </span>"
                                        }

                                    }
                                }else if (key === 1){
                                    container.lastElementChild.firstElementChild.innerHTML += "<span class=\"icon-text tag is-dark hostnames\">\n" +
                                        "                                                           <span class=\"icon is-small\">\n" +
                                        "                                                               <i class=\"fas fa-minus-square\"></i>\n" +
                                        "                                                           </span>\n" +
                                        "                                                           <span>"+ balises2[1] +"</span>\n" +
                                        "                                                   </span>"
                                }

                            }
                        });

                        container.lastElementChild.lastElementChild.innerHTML += "<a class=\"tag is-delete ajax-remove-asset new-delete-btn\" href="+ urlForDelete +" title=\"Retiré cette action\"></a>"

                        let deleteBtn = document.querySelectorAll('.ajax-remove-asset');
                        deleteBtn.forEach(function (element) {
                            element.addEventListener('click' || 'touchstart', removeAsset);
                        });

                        let removeBtn = document.querySelectorAll('a.ajax-remove-asset').forEach(function (link){
                            link.addEventListener('click' || 'touchstart', removeAsset);
                        });

                        autoFilledAssetsFields();

                    }

                });

            }

            function removeAsset(event){
                let assetTag = event.target.parentElement.parentElement;
                if (assetTag.parentNode) {
                    assetTag.parentNode.removeChild(assetTag);
                }
                event.preventDefault();

                const url = this.href;

                axios.get(url).then(function (response) {

                })
            }

            // let ajaxForm = document.querySelectorAll('form.ajax-add-asset');
            //
            // ajaxForm.forEach(function (form) {
            //     form.addEventListener('submit', addAsset);
            // })

        </script>
        {#        FIN DU SCRIPT         #}


        {#              LES FONCTIONS                   #}
        <script>

            function setMultiple(multipleCheckbox){
                let ajaxForm = document.querySelectorAll('form.ajax-add-asset');
                let navForMultiple = document.querySelectorAll('.nav-for-multiple');
                let navForOnlyOne = document.querySelectorAll('.nav-for-only-one');
                if (multipleCheckbox.checked){
                    ajaxForm.forEach(function (form) {
                        form.addEventListener('submit', addAsset);
                    });
                    navForMultiple.forEach(function (element) {
                        element.classList.remove('is-hidden')
                    });
                    navForOnlyOne.forEach(function (element) {
                        element.classList.add('is-hidden')
                    });
                }else {
                    ajaxForm.forEach(function (form) {
                        form.removeEventListener('submit', addAsset);
                    });
                    navForMultiple.forEach(function (element) {
                        element.classList.add('is-hidden')
                    });
                    navForOnlyOne.forEach(function (element) {
                        element.classList.remove('is-hidden')
                    })
                }
            }

            window.onload = function(){
                let multiple = document.querySelectorAll('.multiple');
                multiple.forEach(element => setMultiple(element));
                if (typeof updateValue !== 'undefined'){
                    updateValue();
                }
            } ;

            autoFilledAssetsFields();

            function autoFilledAssetsFields(){
                let hostnames = document.querySelectorAll('.hostnames');
                let field_selected;
                let hostnames_field = document.getElementById('assets-field');
                if (hostnames_field !== null){
                    hostnames_field = hostnames_field.querySelectorAll('input');
                    hostnames_field.forEach(field => field.addEventListener('focus', event2 =>{
                            field_selected = field;
                            return field_selected;
                        })
                    );
                }

                hostnames.forEach(element => element.addEventListener('click', event => {
                        if (hostnames_field){
                            if (field_selected !== undefined){
                                field_selected.value = element.innerText;
                            }
                        }
                    })
                );
            }

            function addAttributes(htmlObjet, attributes, value){
                htmlObjet.setAttribute(attributes, value);
            }

            function removeAttributes(htmlObjet, attributes){
                htmlObjet.removeAttribute(attributes);
            }

            function makeVisible(element) {
                element.classList.remove('is-hidden')
            }

        </script>
        {#        FIN          #}

    {% endblock %}
</body>
</html>
